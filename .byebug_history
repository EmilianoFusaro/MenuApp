c
@profile=Profile.find(28)
params
param
c
current_user.nil?
c
x
c
params[:descrizione]
params
c
params
param
paramd
c
params
c
params
c
params
c
params
c
params
c
x
c
x
c
@receife.errors
c
x
@receife.errors
@receife.save
c
@receife.save
@receife.nome = params[:nome]
@receife.tipo= params[:tipo]
@receife = Receive.new()
params[:tipo]
params
c
params
c
params[:nome]
c
params[:nome]
params
c
current_user.profile.stampalistino
current_user
c
profiles
current_user.id
current_user
c
params[:ragionesociale]
params[:descrizione]
params
c
params[:id]
c
params[:descrizione]
params
c
@medium.as_json
@medium.to_a
@medium.class
@medium.type
@medium.name
@medium.class
@medium
c
_record
c
c 34
params[:foto]
params(:foto)
params
c
params
medium_params
c
params
c
params
c
params
param
c
params
c
params
c
params
c
params
c
params
c
params
c
params
c
params
c
paramsc
params
c
params
c
params
c
pluto
c
medium_params
c
medium_params=f
f.class
pp f
f
f["foto"]=params[:medium][:foto][0]
f["foto"]=params[:medium][foto][0]
f= Hash.new
params[:medium][:foto][0];
params[:medium][:foto][0].to_hash
params[:medium][:foto][0].to_h
params[:medium][:foto][0]
params[:medium][:foto][2]
params[:medium][:foto][1]
params[:medium][:foto]
source pippo.rb
params[:medium][:foto]
params[:medium][:descrizione]
params[:medium][0]
params[:medium][1]
params[:medium].count
params[:medium]
params
c
params
params[]
c
source pippo.rb
clean
clear
cls
source pippo.rb
if (1==1) \n
source pippo.rb
eval(a)
source pippo.rb
params.map(&:commit)
params.map(&:"medium")
params.map(&:medium)
params.map(&:foto)
params.map
pp params
params.map
params
pp medium_params
medium_params.map(&:foto)
medium_params
puts "ciao" , puts "ba"
source pippo.rb
source pippo
source
if 1==1 ;  puts ciao ; end ;
if 1==1  puts ciao ; end ;
if 1==1  puts ciao ; end
if 1==1 ; puts ciao ; end
if 1==1 puts ciao
puts "ciao" ; puts "bao"
puts "ciao" '\n' puts "boa" '\n'
puts "ciao" '\n'
def putto ;
def putto
if 1==1 ; puts "ciao" ; else ; puts "bao" ;
if 1==0 ; puts "ciao" ; else ; puts "bao" ;
if 1=0 ; puts "ciao" ; else ; puts "bao" ;
if 1=0 ; puts "ciao" ; else ; puts "bao"
puts "ciao" ;  puts "pao"
puts "ciao" :  puts "pao"
puts "ciao" \\ puts "pao"
puts "ciao" // puts "pao"
quit
method
puts"ciao" / puts "fao"
puts"ciao" /n puts "fao"
puts"ciao" \n puts "fao"
puts"ciao" \ puts "fao"
c
medium_params
medium_params.class
medium_params
params.require(:
c
params.require(:medium)
params
medium_params
c
params[:medium].all
params[:medium].foto
params[:medium](0)
params[:medium][0]
params[:medium]
c
@media[:foto][0]
@media[:foto]
@media
@media[1]
@media[1
@media(0)
@media.each
@media=params[:medium]
params[:medium]
medium_params
params[:medium].class
params[:medium](0)
params[:medium][1]
params[:medium][0]
params[:medium].count
params[:medium]
params.count
params.class
medium.size
medium.lenght
medium.len
params
exit
Category.where(:id => 65).update_all(:ordine => 1)
Category.where(:id => 65).update(:ordine => 1)
Category.where(:id => 65)
Category.where(:id => 1)
Category.where(id => 1)
Category.update(ordine => 1).where(id => 1)
gino["ordine"]
gino[:ordine]
gino
gino[:id]
gino.id
gino=valore[0].to_hash
valore[0]
valore
valore[0]["id"]
Category(1)
Category[1]
valore[0]["id"]
valore[0].to_hash
Category.update_attributes(valore[0].to_hash)
valore[0].to_hash
valore[0]["id"]
valore[0].id
valore[0]["id"]
valore
